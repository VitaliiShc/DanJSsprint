// ! НА ЩО ЗВЕРТАТИ УВАГУ ПРИ ВИКОНАННІ ЗАВДАННЯ:
// * В рядку, де написано "ВАШ КОД" починаєте писати код. Можете додавати після нього стільки рядків, скільки треба для виконання задачі.
// *  Після рядка "КіНЕЦЬ БЛОКУ КОДА" починається наступна задача.
// * Якщо в кінці рядку написано "видалити цей рядок", то просто видаляєте рядок.
// * Якщо написано "змінити рядок" - змінюєте код в рядку на той, що треба по задачі.
// ? Для того, щоб побачити кольорові коментарі встановть в редактор коду доповнення better comments
// ? https://plugins.jetbrains.com/plugin/10850-better-comments
// ? https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments

// ! ###Оголошуємо змінні###

// * Змінна, яка зберігає кількість карток на дошці. Ініціалізувати із значенням 12.
// ? Це змінні, які ви повинні були зробити в минулому завданні.
// ? Можете замість цих вставити свої власні згідно опису
const CARDS_COUNT = 12;

// * Змінна, яка зберігає час затримки перед перевертанням картки. Ініціалізувати зі значенням 1000.
// ? Це змінні, які ви повинні були зробити в минулому завданні.
// ? Можете замість цих вставити свої власні згідно опису
const FLIP_CARD_DELAY = 1000;

// * Змінна, значення якої визначає чи маємо перевернуту картку. Ініціалізуємо зі значенням false.
// ? Це змінні, які ви повинні були зробити в минулому завданні.
// ? Можете замість цих вставити свої власні згідно опису
let hasFlippedCard = false;

// * Змінні, значення яких зберігатиму першу та другу перевернуту картку. Тільки оголошуємо, без ініціалізації.
// ? Це змінні, які ви повинні були зробити в минулому завданні.
// ? Можете замість цих вставити свої власні згідно опису
let firstCard, secondCard;

////////////////////////////////////////// ! КіНЕЦЬ БЛОКУ КОДА //////////////////////////////////////////

// ! ###Пишемо функції ###

// * Функція, яка скидає значення змінних дошки. Змінною, значення якої визначає, чи маємо на дошці перевернуту картку, ставимо вихідне значення. Змінним значення яких зберігають першу і другу перевернуту картку присвоюємо порожнє значення.
// ? Це функція, яку ви повинні були зробити в минулому завданні.
// ? Можете замість нєї вставити свою власну згідно опису

function resetBoard() {
  hasFlippedCard = false;
  firstCard = secondCard = null;
}

////////////////////////////////////////// ! КіНЕЦЬ БЛОКУ КОДА //////////////////////////////////////////

// * Функція, яка через певний час перевертає картки у вихідний стан. Функція повинна через FLIP_CARD_DELAY виконати такі дії:
// * - вивести в консоль два повідомлення:
// * Перше повідомлення: "Перевернули у вихідний стан першу картку"
// * Друге повідомлення: "Перевернули у вихідний стан другу картку"
// * - викликати функцію скидання змінних дошки
function flipCardByTimeout() {
  setTimeout(function () {
    console.log('Перевернули у вихідний стан першу картку');
    console.log('Перевернули у вихідний стан другу картку');
    resetBoard();
  }, FLIP_CARD_DELAY);
}
////////////////////////////////////////// ! КіНЕЦЬ БЛОКУ КОДА //////////////////////////////////////////

// * Функція, яка визначає чи збігаються перевернуті картки і залежно від умови виконує певні дії. Функція як параметри приймає назву фреймворку першої картки та назву фреймворку другої картки. Якщо назви збігаються, вивести в консоль текст "Дія 1", інакше вивести в консоль текст "Дія 2";
// ? Це функція, яку ви повинні були зробити в минулому завданні.
// ? Можете замість нєї вставити свою власну згідно опису

function actionIfMatch(firstCardFramework, secondCardframework) {
  if (firstCardFramework === secondCardframework) {
    console.log('Дія 1');
  } else {
    console.log('Дія 2');
  }
}

////////////////////////////////////////// ! КіНЕЦЬ БЛОКУ КОДА //////////////////////////////////////////

// * Функція, що ініціалізує дошку. Функція приймає як параметри масив карток. Перебирає отриманий масив і при кожній ітерації (колу перебору): створює змінну, в яку записує значення розраховане за наступною формулою ОКРУГЛЕННЯ_ВНИЗ(ВИПАДКОВЕ_ЧИСЛО * КІЛЬКІСТЬ КАРТ), виводимо значення змінної в консоль.
function initializeBoard(array) {
  array.forEach(element => {
    let randomNumber = Math.floor(Math.random() * CARDS_COUNT);
    console.log(randomNumber);
  });
}

////////////////////////////////////////// ! КіНЕЦЬ БЛОКУ КОДА //////////////////////////////////////////

// * Функція блокування першої та другої картки. Функція має виконати такі дії:
// * - вивести в консоль повідомлення "Перша карта заблокована"
// * - вивести в консоль повідомлення "Друга картка заблокована"
// * - викликати функцію скидання змінних дошки
// ? Це функція, яку ви повинні були зробити в минулому завданні.
// ? Можете замість нєї вставити свою власну згідно опису

function disableCards() {
  console.log('Першу картку заблоковано');
  console.log('Другу картку заблоковано');
  resetBoard();
}

////////////////////////////////////////// ! КіНЕЦЬ БЛОКУ КОДА //////////////////////////////////////////

// * Викликаємо функцію ініціалізації дошки, передаємо їй як аргумент масив [1, 2, 3, 4, 5, 6];

initializeBoard([1, 2, 3, 4, 5, 6]);
